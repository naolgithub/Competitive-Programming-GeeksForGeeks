class Solution
{
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)
    {
        // Your code here
        heapSort(arr,n);
    }
 
    //Heapify function to maintain heap property.
    void heapify(int arr[], int n, int i)
    {
        // Your code here
        int largest=i;
        int l=2*i;
        int r=(2*i)+1;
        while(l<=n && arr[l-1]>arr[largest-1]){
            largest=l;
        }
        while(l<=n && arr[l-1]>arr[largest-1]){
            largest=l;
        }
        while(r<=n && arr[r-1]>arr[largest-1]){
            largest=r;
        }
        if(largest!=i){
            int temp=arr[largest-1];
            arr[largest-1]=arr[i-1];
            arr[i-1]=temp;
            heapify(arr,n,largest);
        }
    }
    
    //Function to sort an array using Heap Sort.
    public void heapSort(int arr[], int n)
    {
        //code here
        for(int i=n/2;i>=1;i--){
            heapify(arr,n,i);
        }
        for(int i=n-1;i>=1;i--){
            int temp=arr[0];
            arr[0]=arr[i];
            arr[i]=temp;
            heapify(arr,i,1);
        }
        
    }
 }
 
 
